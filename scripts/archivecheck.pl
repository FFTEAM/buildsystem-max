#!/usr/bin/perl
#
# archivecheck.pl: script to generate a temporary makefile
#                  to check the availability of sources in make/archives.mk
#
# (C) 2012 Stefan Seyfried
# License: GPL v2 or later

use strict;
use warnings;

open(F, "< make/archives.mk") or die "can't open make/archive.mk";
my $line;
my $found = 0;
my $file;
my $targets;
my %data;
my $count = 0;
my $total = 0;

while ($line = <F>) {
	next if $line =~ m/^\s*#/;
	chomp $line;
	if ($line =~ m#^\$\(ARCHIVE\)/(.*):#) {
		$found = 1;
		$file = $1;
		next;
	}
	if ($found == 1) {
		if ($line =~ m#.*((http|ftp)://.+)\s*$#) {
			my $url = $1;
			$data{$file} = $url;
			$total++;
		}
	}
	$found = 0;
	$file = "";
}

# output Makefile
print "# Makefile autogenerated by $0\n#\n";
print "include make/versions.mk\n\n";
print "# default if called without arguments\n";
print "default: archivecheck\n\n";
my $cmd = "wget -nv --timeout=10 --passive-ftp";

foreach $file (sort(keys %data)) {
	$count++;
	my $url = $data{$file};
	print "$file:\n";
	printf ("\t\@echo \"[%3d/%3d] checking $file...\"\n", $count, $total);
	if ($url =~ m#\.googlecode\.com/#) {
		# googlecode does not work with --spider :-(
		print "\t\@$cmd -O /dev/null $url\n";
	} else {
		print "\t\@$cmd --spider $url\n";
	}
	print "\n";
	$targets .= " $file";
}

print "\n";
# put the list of targets last in the Makefile because it is ugly :-)
print "archivecheck:$targets\n";
print "\n";
print "PHONY =$targets\n";
