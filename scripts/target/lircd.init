#!/bin/sh
PID=/var/run/lirc/lircd.pid

makelink()
{
	FOUND=false
	while read A B C; do
		case $A in
			N:)	eval $B $C
				test x"$Name" = xlircd && FOUND=true
				;;
			H:)	if $FOUND; then
					ln -sf $C /dev/input/nevis_ir
					break;
				fi
				;;
		esac
	done < /proc/bus/input/devices
}

# LIRCD_OPTS can be set in /etc/profile.local if needed...
case $1 in
	start)
		read dummy dummy KVER dummy < /proc/version
		grep -q uinput /lib/modules/${KVER}/modules.dep || depmod -a
		modprobe uinput
		# if /var/run does not exist, we are screwed anyway...
		test -d /var/run/lirc || mkdir /var/run/lirc
		# wait for uinput device, takes a short time to show up...
		for i in `seq 40`; do
			test -e /dev/uinput && break
			usleep 100000	# 100ms
		done
		/sbin/lircd -u $LIRCD_OPTS
		makelink
		;;
	stop)
		kill -TERM `cat $PID`
		;;
	status)
		if test -e $PID && kill -0 `cat $PID` 2>/dev/null; then
			echo "lircd is running"
			exit 0
		else
			echo "lircd is not running"
			exit 1
		fi
		;;
	*)
		echo   "usage:	$0 <start|stop|status>"
		exit 1
		;;
esac
